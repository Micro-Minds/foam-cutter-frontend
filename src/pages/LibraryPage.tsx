import design1 from "../assets/design1.jpg"; 
import design2 from "../assets/design2.jpg";
import chess from "../assets/chess.jpg";
import horseImage from "../assets/horse.jpg";

import {
  getAllLibraryItems,
  saveNewLibraryItem,
} from "../service/libraryService.ts";

import {getNextLibraryId} from "../service/genarateIDs.ts";
import {useState} from "react";
import {toBase64} from "../service/covertImageToBase64.ts";



export const STAR_5: string = `G21
G90
(5-point star)
G0 X0 Y38.042
G1 X23.511 Y30.901
G1 X30.901 Y7.389
G1 X38.042 Y30.901
G1 X61.553 Y38.042
G1 X38.042 Y45.183
G1 X30.901 Y68.695
G1 X23.511 Y45.183
G1 X0 Y38.042
M30`;

const horse=`(Header)
(Generated by gcodetools from Inkscape.)
(Using default header. To add your own header create file "header" in the output dir.)
M3
(Header end.)
G21 (All units in mm)

(Start cutting path id: rect1)
(Change tool to Cylindrical cutter)

G00 Z5.000000
G00 X133.515806 Y6.407396

G01 Z-1.000000 F100.0(Penetrate)
G01 X175.306664 Y6.376808 Z-1.000000 F100.000000
G01 X175.306664 Y15.740833 Z-1.000000
G01 X133.509007 Y15.740833 Z-1.000000
G03 X133.147988 Y20.859534 Z-1.000000 I-37.878931 J-0.099500
G03 X132.776315 Y21.183090 Z-1.000000 I-0.371673 J-0.051694
G02 X132.361488 Y21.506551 Z-1.000000 I0.000000 J0.427731
G02 X132.039098 Y24.111632 Z-1.000000 I10.364015 J2.605081
G03 X131.687004 Y26.736612 Z-1.000000 I-9.961100 J0.000000
G03 X131.207206 Y27.159654 Z-1.000000 I-0.561690 J-0.153442
G02 X130.622884 Y27.722614 Z-1.000000 I0.097446 J0.685871
G02 X129.487060 Y36.696013 Z-1.000000 I84.880883 J15.302535
G02 X129.283719 Y41.923585 Z-1.000000 I75.509772 J5.554900
G02 X129.464551 Y42.176604 Z-1.000000 I0.265820 J0.001149
G03 X129.763738 Y42.388748 Z-1.000000 I-0.203978 J0.604714
G03 X130.377600 Y43.346666 Z-1.000000 I-4.847767 J3.782243
G03 X130.664957 Y44.442454 Z-1.000000 I-2.297457 J1.188052
G03 X130.605306 Y49.683943 Z-1.000000 I-55.678904 J1.987421
G02 X130.559165 Y54.891222 Z-1.000000 I52.447487 J3.068568
G02 X130.846528 Y55.617682 Z-1.000000 I1.183872 J-0.048234
G03 X131.154863 Y56.329655 Z-1.000000 I-0.980738 J0.847481
G03 X131.146376 Y58.471830 Z-1.000000 I-9.819220 J1.032203
G02 X131.186367 Y60.611591 Z-1.000000 I8.118501 J0.918521
G02 X131.635595 Y61.711486 Z-1.000000 I2.494343 J-0.377073
G03 X131.977553 Y62.883655 Z-1.000000 I-1.477344 J1.066951
G03 X130.715771 Y77.627958 Z-1.000000 I-267.676529 J-15.480977
G02 X130.188766 Y82.878099 Z-1.000000 I202.853836 J23.013821
G02 X130.246843 Y82.984544 Z-1.000000 I0.109118 J0.009531
G02 X130.377102 Y83.052220 Z-1.000000 I6.126569 J-11.632965
G02 X131.464254 Y83.609034 Z-1.000000 I1173.388479 J-2289.640345
G03 X133.156285 Y85.364134 Z-1.000000 I-1.710955 J3.342637
G03 X134.652059 Y90.440044 Z-1.000000 I-16.052577 J7.488732
G02 X135.826226 Y94.613634 Z-1.000000 I15.656386 J-2.152691
G02 X137.001197 Y95.821436 Z-1.000000 I2.192997 J-0.957969
G03 X138.445889 Y96.801903 Z-1.000000 I-2.377343 J5.057543
G03 X140.448266 Y99.052077 Z-1.000000 I-11.399432 J12.160106
G03 X142.566137 Y102.929372 Z-1.000000 I-13.026811 J9.632618
G03 X142.551680 Y104.586769 Z-1.000000 I-2.131889 J0.810166
G02 X142.429770 Y105.989973 Z-1.000000 I2.256721 J0.902962
G02 X143.331721 Y108.299865 Z-1.000000 I7.387825 J-1.553709
G03 X144.341359 Y110.546136 Z-1.000000 I-9.232896 J5.499975
G03 X144.228991 Y111.122442 Z-1.000000 I-0.583459 J0.185345
G03 X143.744958 Y111.516850 Z-1.000000 I-1.243928 J-1.032382
G03 X138.869353 Y114.040730 Z-1.000000 I-110.227263 J-206.964612
G03 X133.909977 Y116.458760 Z-1.000000 I-100.670659 J-200.180470
G03 X133.734497 Y116.400128 Z-1.000000 I-0.057129 J-0.120930
G02 X132.790421 Y114.821639 Z-1.000000 I-14.884009 J7.830392
G02 X130.337027 Y111.363668 Z-1.000000 I-75.275886 J50.808119
G02 X130.226328 Y111.344965 Z-1.000000 I-0.065139 J0.048588
G02 X128.698027 Y112.472861 Z-1.000000 I13.113642 J19.368372
G02 X126.457576 Y115.153126 Z-1.000000 I5.554417 J6.919511
G02 X125.219400 Y118.868759 Z-1.000000 I9.800334 J5.329922
G03 X124.032267 Y122.551639 Z-1.000000 I-11.543376 J-1.688104
G03 X121.891823 Y125.284947 Z-1.000000 I-8.336343 J-4.323418
G03 X120.533192 Y126.376678 Z-1.000000 I-13.183337 J-15.015069
G03 X120.297920 Y126.455011 Z-1.000000 I-0.239124 J-0.325718
G02 X120.084722 Y126.552413 Z-1.000000 I0.002746 J0.288043
G02 X119.154915 Y127.749069 Z-1.000000 I9.067499 J8.005038
G02 X117.399772 Y131.729510 Z-1.000000 I9.901758 J6.743280
G02 X117.687256 Y133.939812 Z-1.000000 I3.061596 J0.725639
G03 X117.897121 Y134.683070 Z-1.000000 I-1.586890 J0.849329
G03 X117.808999 Y136.002641 Z-1.000000 I-5.267422 J0.310961
G02 X117.618297 Y137.357270 Z-1.000000 I12.796502 J2.492201
G02 X117.423491 Y140.412362 Z-1.000000 I64.369278 J5.638216
G02 X117.461299 Y142.787609 Z-1.000000 I21.230145 J0.849999
G02 X117.919065 Y143.615353 Z-1.000000 I1.123466 J-0.080858
G02 X118.911517 Y144.002570 Z-1.000000 I1.223091 J-1.669376
G02 X122.804872 Y144.355408 Z-1.000000 I10.227666 J-91.199194
G03 X128.185654 Y144.822921 Z-1.000000 I-10.597260 J153.166534
G03 X128.447074 Y144.994076 Z-1.000000 I-0.035522 J0.339478
G03 X128.362345 Y145.170222 Z-1.000000 I-0.103496 J0.058667
G03 X123.634524 Y145.816297 Z-1.000000 I-16.658343 J-104.280076
G02 X117.765853 Y146.616692 Z-1.000000 I14.983965 J131.781094
G02 X117.633155 Y146.772187 Z-1.000000 I0.024755 J0.155495
G02 X117.755496 Y146.964590 Z-1.000000 I0.212463 J0.000000
G02 X122.831928 Y149.207002 Z-1.000000 I53.267871 J-113.721921
G03 X127.726010 Y151.356006 Z-1.000000 I-51.547720 J124.040640
G03 X127.719599 Y151.470479 Z-1.000000 I-0.025914 J0.055964
G03 X127.404065 Y151.494643 Z-1.000000 I-0.206023 J-0.618028
G03 X121.878295 Y150.474007 Z-1.000000 I34.367204 J-201.534319
G02 X116.607939 Y149.587799 Z-1.000000 I-17.501070 J87.965572
G02 X115.923067 Y149.898706 Z-1.000000 I-0.096095 J0.698098
G02 X115.942108 Y150.624767 Z-1.000000 I0.531233 J0.349349
G02 X119.121095 Y154.667300 Z-1.000000 I64.276577 J-47.274900
G03 X122.752094 Y159.072144 Z-1.000000 I-236.982393 J199.048202
G03 X122.804872 Y159.221305 Z-1.000000 I-0.184389 J0.149161
G01 X122.740198 Y159.255263 Z-1.000000
G03 X121.260569 Y158.157201 Z-1.000000 I15.097225 J-21.889297
G02 X113.010723 Y152.128527 Z-1.000000 I-75.824069 J95.101254
G02 X112.057876 Y152.007039 Z-1.000000 I-0.598340 J0.895461
G02 X111.441750 Y152.647367 Z-1.000000 I0.323430 J0.927788
G02 X110.630804 Y156.671513 Z-1.000000 I20.049010 J6.134063
G03 X110.001202 Y162.245171 Z-1.000000 I-238.957678 J-24.170338
G03 X109.818445 Y162.816519 Z-1.000000 I-1.614339 J-0.201474
G03 X109.643561 Y162.786817 Z-1.000000 I-0.082409 J-0.044487
G03 X109.196968 Y159.327265 Z-1.000000 I57.109091 J-9.130811
G02 X108.013354 Y152.817986 Z-1.000000 I-40.362771 J3.977108
G02 X107.228826 Y151.973222 Z-1.000000 I-1.190052 J0.318520
G02 X106.164540 Y152.067824 Z-1.000000 I-0.427374 J1.225969
G02 X101.606208 Y155.138482 Z-1.000000 I16.853598 J29.937543
G03 X97.123512 Y158.691947 Z-1.000000 I-683.078614 J-857.099594
G03 X96.578767 Y159.101819 Z-1.000000 I-9.328516 J-11.831217
G03 X96.504168 Y159.024963 Z-1.000000 I-0.031567 J-0.043992
G03 X99.933400 Y154.710134 Z-1.000000 I113.490559 J86.677098
G02 X103.372537 Y150.114778 Z-1.000000 I-45.755586 J-37.827793
G02 X103.330868 Y149.680438 Z-1.000000 I-0.284094 J-0.191914
G02 X102.884124 Y149.513256 Z-1.000000 I-0.406943 J0.406946
G02 X99.789115 Y149.926175 Z-1.000000 I1.703749 J24.576058
G01 X96.628365 Y150.552914 Z-1.000000
G01 X96.391646 Y153.001256 Z-1.000000
G03 X96.064003 Y155.434828 Z-1.000000 I-32.846300 J-3.183399
G03 X95.264417 Y159.530167 Z-1.000000 I-94.425217 J-16.310133
G02 X94.416920 Y165.533954 Z-1.000000 I39.872429 J8.690119
G02 X94.533973 Y170.615337 Z-1.000000 I28.560107 J1.884137
G03 X94.532928 Y173.174783 Z-1.000000 I-11.344072 J1.275092
G03 X94.051519 Y174.862736 Z-1.000000 I-5.306755 J-0.600876
G03 X93.229272 Y176.476242 Z-1.000000 I-28.816011 J-13.668454
G03 X92.816075 Y177.128466 Z-1.000000 I-5.216014 J-2.847452
G02 X92.295507 Y180.566486 Z-1.000000 I3.046121 J2.219651
G02 X94.660222 Y182.530148 Z-1.000000 I2.788728 J-0.952621
G03 X95.161713 Y182.916723 Z-1.000000 I-0.092932 J0.639129
G03 X95.471828 Y184.439674 Z-1.000000 I-3.584490 J1.522951
G02 X95.554735 Y186.214183 Z-1.000000 I19.031897 J-0.000000
G02 X95.695019 Y186.813618 Z-1.000000 I2.251971 J-0.210889
G03 X95.544228 Y187.140489 Z-1.000000 I-0.234563 J0.090009
G03 X94.033483 Y187.399778 Z-1.000000 I-1.510745 J-4.271537
G02 X92.404486 Y187.656310 Z-1.000000 I0.000000 J5.300388
G02 X92.146502 Y188.010736 Z-1.000000 I0.114468 J0.354426
G02 X92.292623 Y188.580240 Z-1.000000 I1.182877 J-0.000000
G02 X94.358125 Y192.037198 Z-1.000000 I48.685029 J-26.743352
G03 X97.055937 Y196.684804 Z-1.000000 I-46.141831 J29.890914
G03 X97.318229 Y197.763521 Z-1.000000 I-2.087054 J1.078717
G03 X97.186711 Y197.840296 Z-1.000000 I-0.088168 J0.000000
G03 X95.607095 Y196.798614 Z-1.000000 I6.749144 J-11.952976
G02 X93.859561 Y195.549429 Z-1.000000 I-20.782872 J27.227062
G02 X92.836365 Y194.945449 Z-1.000000 I-5.898904 J8.824568
G02 X91.992455 Y194.751341 Z-1.000000 I-0.800210 J1.547467
G02 X91.776771 Y194.972505 Z-1.000000 I0.005550 J0.221164
G02 X91.855839 Y195.531998 Z-1.000000 I2.019049 J0.000000
G02 X92.313331 Y196.832433 Z-1.000000 I11.525377 J-3.323931
G03 X92.618066 Y197.808752 Z-1.000000 I-5.068078 J2.117597
G03 X92.495942 Y197.914573 Z-1.000000 I-0.090290 J0.019179
G03 X92.341061 Y197.847566 Z-1.000000 I0.518274 J-1.410453
G03 X92.036033 Y197.691381 Z-1.000000 I8.792381 J-17.547346
G03 X91.244923 Y197.229241 Z-1.000000 I4.545447 J-8.689282
G03 X89.071421 Y195.768329 Z-1.000000 I43.559828 J-67.154312
G03 X86.447288 Y193.236012 Z-1.000000 I6.561323 J-9.425021
G03 X85.867836 Y191.498385 Z-1.000000 I2.315622 J-1.737627
G03 X86.327631 Y189.336152 Z-1.000000 I5.313954 J-0.000000
G03 X87.035645 Y188.876450 Z-1.000000 I0.708014 J0.315377
G02 X87.221568 Y188.752438 Z-1.000000 I0.000000 J-0.201376
G02 X87.344506 Y188.136988 Z-1.000000 I-1.479057 J-0.615450
G02 X87.044820 Y187.698562 Z-1.000000 I-0.470541 J0.000000
G02 X85.455270 Y187.399780 Z-1.000000 I-1.589550 J4.078896
G03 X84.008115 Y187.058916 Z-1.000000 I0.000000 J-3.242411
G03 X83.786971 Y186.567885 Z-1.000000 I0.189956 J-0.380863
G02 X83.938506 Y185.727263 Z-1.000000 I-4.947526 J-1.325837
G02 X84.014671 Y184.166887 Z-1.000000 I-16.874062 J-1.605697
G03 X84.297292 Y182.875637 Z-1.000000 I3.136882 J0.010028
G03 X84.729335 Y182.597783 Z-1.000000 I0.432042 J0.196971
G02 X85.754925 Y181.818422 Z-1.000000 I0.000000 J-1.064486
G02 X86.537410 Y176.095927 Z-1.000000 I-20.632057 J-5.735941
G03 X86.726463 Y173.133390 Z-1.000000 I23.530620 J0.014295
G03 X87.148368 Y171.307457 Z-1.000000 I9.289240 J1.184689
G02 X87.540127 Y169.471976 Z-1.000000 I-7.611209 J-2.584058
G02 X88.104258 Y161.069963 Z-1.000000 I-159.876889 J-14.954469
G03 X88.624551 Y152.653272 Z-1.000000 I201.397820 J8.225343
G03 X89.003787 Y150.230529 Z-1.000000 I16.842690 J1.395361
G02 X89.482969 Y145.144994 Z-1.000000 I-18.630755 J-4.320815
G02 X88.674637 Y142.037828 Z-1.000000 I-7.535075 J0.301530
G03 X86.739249 Y137.107618 Z-1.000000 I24.915850 J-12.625865
G03 X86.237568 Y133.536266 Z-1.000000 I12.460958 J-3.571353
G03 X86.626250 Y131.676090 Z-1.000000 I4.645604 J0.000000
G03 X87.757072 Y130.062147 Z-1.000000 I4.562828 J1.993851
G01 X89.278831 Y128.614784 Z-1.000000
G01 X88.620530 Y127.151641 Z-1.000000
G01 X87.959973 Y125.688497 Z-1.000000
G01 X89.344211 Y124.270443 Z-1.000000
G02 X90.278750 Y122.742120 Z-1.000000 I-2.876397 J-2.808747
G02 X90.302355 Y121.420808 Z-1.000000 I-2.077402 J-0.697980
G03 X90.071148 Y119.995393 Z-1.000000 I5.440313 J-1.613895
G03 X90.223448 Y119.067154 Z-1.000000 I2.415593 J-0.080277
G02 X90.387063 Y118.143613 Z-1.000000 I-2.411363 J-0.903460
G02 X90.209920 Y117.121556 Z-1.000000 I-3.180134 J0.024800
G03 X90.194781 Y115.445228 Z-1.000000 I2.468484 J-0.860526
G03 X91.718152 Y112.531480 Z-1.000000 I9.545183 J3.135331
G02 X92.990968 Y109.076033 Z-1.000000 I-5.086834 J-3.835883
G02 X92.162281 Y105.105296 Z-1.000000 I-7.715815 J-0.461562
G03 X90.022175 Y99.887183 Z-1.000000 I30.664656 J-15.624416
G03 X89.560636 Y96.905827 Z-1.000000 I9.398407 J-2.981356
G03 X90.486374 Y93.766011 Z-1.000000 I5.787510 J-0.000000
G03 X92.184825 Y92.841044 Z-1.000000 I1.698451 J1.096889
G02 X93.142402 Y92.642688 Z-1.000000 I-0.000000 J-2.410566
G02 X93.496920 Y92.272918 Z-1.000000 I-0.262554 J-0.606556
G02 X93.519656 Y91.705877 Z-1.000000 I-0.826361 J-0.317110
G02 X92.191589 Y87.836144 Z-1.000000 I-44.278010 J13.033163
G03 X90.800538 Y82.231881 Z-1.000000 I20.468110 J-8.055222
G03 X91.368711 Y80.491121 Z-1.000000 I2.196266 J-0.246256
G02 X92.163499 Y78.896241 Z-1.000000 I-2.372543 J-2.177801
G02 X92.998764 Y72.577850 Z-1.000000 I-61.999121 J-11.410435
G02 X93.221129 Y66.270372 Z-1.000000 I-68.967271 J-5.589048
G02 X92.752949 Y63.409089 Z-1.000000 I-9.585744 J0.099533
G03 X92.371424 Y61.599728 Z-1.000000 I8.297809 J-2.694597
G03 X92.250205 Y58.487609 Z-1.000000 I24.720035 J-2.521281
G02 X92.105965 Y55.383144 Z-1.000000 I-22.151490 J-0.526381
G02 X91.659536 Y53.435361 Z-1.000000 I-9.148063 J1.071669
G03 X91.279316 Y51.475379 Z-1.000000 I6.646477 J-2.306233
G03 X91.141011 Y42.907046 Z-1.000000 I129.327787 J-6.372820
G02 X90.286933 Y31.631803 Z-1.000000 I-61.161145 J-1.037130
G02 X88.676889 Y28.399607 Z-1.000000 I-6.142943 J1.042865
G02 X87.298551 Y27.424013 Z-1.000000 I-3.111536 J2.934570
G02 X85.730311 Y27.092024 Z-1.000000 I-1.568240 J3.538010
G01 X84.021433 Y27.092024 Z-1.000000
G01 X84.021433 Y24.136426 Z-1.000000
G02 X83.696829 Y21.506781 Z-1.000000 I-10.813785 J-0.000000
G02 X83.281970 Y21.183090 Z-1.000000 I-0.414858 J0.104005
G03 X82.910294 Y20.859529 Z-1.000000 I0.000000 J-0.375254
G03 X82.549271 Y15.740833 Z-1.000000 I37.521139 J-5.218451
G01 X52.646139 Y15.740833 Z-1.000000
G01 X52.629182 Y6.342883 Z-1.000000
G01 X82.542513 Y6.407408 Z-1.000000
G01 X82.542513 Y6.407408 Z-1.000000
G01 X108.029162 Y6.407408 Z-1.000000
G01 X133.515811 Y6.407408 Z-1.000000
G01 X133.515811 Y6.407408 Z-1.000000
G00 Z5.000000

(End cutting path id: rect1)


(Footer)
M5
G00 X0.0000 Y0.0000
M2
(Using default footer. To add your own footer create file "footer" in the output dir.)
(end)`


export function LibraryPage() {

  const [base64Image, setBase64Image] = useState("");



  const handleFileChange = async (event) => {
    const file = event.target.files[0];
    if (!file) return;

    try {
      const base64 = await toBase64(file);
      setBase64Image(base64);
      console.log("Base64 image:", base64);

      // Now call saveNewLibraryItem with base64 image string

    } catch (error) {
      console.error("Error converting file:", error);
    }
  };


  const handleSend = async (title: string) => {

   // test the id generation to new items
    const id = await getNextLibraryId();
// test the saving of items in firestore
    const ref = saveNewLibraryItem(id, horse, 200, 50, 1, 5,base64Image,"Liberty","ABCD");
   // console.log(ref);

    //updateFeedRateAndStepSize(STAR_5, 1, 400);

// test the get all ibrary items from firestore
    const items = await getAllLibraryItems();
    const firstItem = items[3];
    console.log(firstItem.gcode);
    // test if the image is perfectly view when we get it from firestore
    setBase64Image(firstItem.image);
    // test update item function
    //updateLibraryItem("C012",STAR_5,100,20,1,5.1)

    alert(
        `⚠️ Preparing to print "${title}"\n\nPlease ensure the CNC is connected and the rigifoam is properly held before starting the print.`
    );


  };

  const handleAdd = () => {
    alert("➕ Add Design: You can now open a form/modal to add a new design.");
  };

  const handleUpdate = (title: string) => {
    alert(`✏️ Update "${title}": Implement update form or modal here.`);
  };

  const handleDelete = (title: string) => {
    const confirmDelete = confirm(`❌ Are you sure you want to delete "${title}"?`);
    if (confirmDelete) {
      alert(`Deleted "${title}" (you should now remove it from the list).`);
    }
  };

  const designs = [
    {
      title: "FIT 23",
      image: design1,
      description:
        "The official logo of the Faculty of Information Technology, Batch 23. A perfect commemorative design for events or souvenirs.",
      size: "200mm × 150mm",
      time: "8 minutes",
      feedRate: "1200 mm/min",
    },
    {
      title: "Ballet Girl",
      image: design2,
      description:
        "An elegant silhouette of a ballet dancer. Ideal for wall art or creative décor, cut smoothly with the hot wire CNC.",
      size: "180mm × 180mm",
      time: "12 minutes",
      feedRate: "1000 mm/min",
    },
    {
      title: "Chess Pawn",
      image: chess, 
      description:
        "A classic chess pawn silhouette, great for educational models or decorative pieces. Easy to cut with precise edges.",
      size: "160mm × 100mm",
      time: "6 minutes",
      feedRate: "1100 mm/min",
    },
    {
      title: "Horse Silhouette",
      image: horseImage, 
      description:
        "A bold and dynamic silhouette of a horse. Perfect for decorative or artistic CNC cuts with detailed curves and edges.",
      size: "220mm × 170mm",
      time: "10 minutes",
      feedRate: "1100 mm/min",
    }
  ];

  return (
      <div className="bg-[#e5dfd5] min-h-screen p-8">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold text-center w-full">Design Library</h1>
          <button
              onClick={handleAdd}
              className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition ml-4 min-w-[160px] text-center"
          >
            + Add Design
          </button>
        </div>

        <div>
          <input type="file" accept="image/*" onChange={handleFileChange}/>
          {base64Image && (
              <img
                  src={base64Image}
                  alt="Preview"
                  style={{maxWidth: "300px", marginTop: "10px"}}
              />
          )}
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
          {designs.map((design, index) => (
              <div
                  key={index}
                  className="bg-white shadow-md rounded-lg p-4 w-full max-w-[320px] mx-auto sm:mx-0 transform transition duration-300 hover:shadow-xl hover:scale-[1.02]"

              >
                <img
                    src={design.image}
                    alt={design.title}
                    className="w-full h-36 object-contain rounded bg-white"
                />

                <h2 className="text-xl font-semibold mt-4 mb-2">{design.title}</h2>
                <p className="text-gray-700 mb-2">{design.description}</p>
                <p className="text-sm text-gray-600">
                  <strong>Size:</strong> {design.size}
                </p>
                <p className="text-sm text-gray-600">
                  <strong>Approx. Time:</strong> {design.time}
                </p>
                <p className="text-sm text-gray-600">
                  <strong>Feed Rate:</strong> {design.feedRate}
                </p>

                <div className="flex flex-wrap gap-2 mt-4 justify-center sm:justify-start">
                  <button
                      onClick={() => handleSend(design.title)}
                      className="bg-green-600 text-white px-2 py-1 text-sm rounded hover:bg-green-700 transition"
                  >
                    Send to Print
                  </button>
                  <button
                      onClick={() => handleUpdate(design.title)}
                      className="bg-yellow-500 text-white px-2 py-1 text-sm rounded hover:bg-yellow-600 transition"
                  >
                    Update
                  </button>
                  <button
                      onClick={() => handleDelete(design.title)}
                      className="bg-red-600 text-white px-2 py-1 text-sm rounded hover:bg-red-700 transition"
                  >
                    Delete
                  </button>
                </div>
              </div>
          ))}
        </div>
      </div>
  );
}
